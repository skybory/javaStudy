5일째!
'누적된 복습'은 잘 하고 있는가?
용어정리 글 만들기


		//행을 쫓아가는 for 문 안에 열을 쫓아가는 for 문을 만들면 해열 코딩을 이해할 수 있다. 
		// 행의 길이는 가변적으로 변할 수 있는 변수이므로, 행과 열의 길이는 하드코딩을 지양하고 배열이름.length 로 받아오는게 좋다
	



1. 메서드
 1-1. main 메서드
  - 프로그램의 시작점

 1-2. 메서드
  - 프로그램의 함수 = 메서드
  - 특정 기능 (=연산)을 그룹화 해서 재사용하기 위한 단위

	public static void 메서드이름() {
	....
	}


 1-3. 메서드의 호출
 - 정의된 메서드는 다른 메서드를 구성하는 {...} 안에서 다음의 형식으로 사용될 수 있으며, 이를 메서드를 호출한다 라고 한다.

	메서드이름();		//메서드를 호출하는 방법


 1-4. 메서드 파라미터
  - Java 프로그램의 메서드(=함수)는 자신이 실행되는데 필요한 조건값을 메서드 이름뒤의 괄호안에서 변수 형태로 선언한다. 이를 메서드 파라미터(=매개변수) 라고 한다.

	public static void 메서드이름(변수형 변수이름) {
	....
	}


매우중요매우중요매우중요매우중요매우중요!!!

 1-5. 다중 파라미터
  - 메서드가 연산을 수행하는데 두 개 이상의 파라미터가 필여하다면, 콤마(,)로 구분하여 선언할 수 있다.

	public static void 메서드이름(변수형 변수이름, 변수형 변수이름, 변수형 변수이름) {
	....
	}


파라미터가 여러개인 메서드를 호출하는 것 보다는, 파라미터가 2개인 메서드를 여러개 호출하는게 훨씬 편하다(클린코딩)

 1-6. 파라미터를 갖는 메서드의 호출

 - 메서드를 정의하면서 파라미터가 명시되어 있다면 해당 메서드를 호출하면서 파라미터를 전달해 주어야 한다.

	public static void 메서드이름 (변수형 변수이름) { ... };
	public static void 메서드이름 (int num) { ... };
	->
	메서드이름(값);
	메서드이름(10);
---------------------------------------------------------------

	public static void 메서드이름 (int num, boolean user) {...};
	->
	메서드 이름(값1,값2);
	메서드이름(65,t2); 

 1-7. 값을 반환하는 메서드
  - 메서드의 리턴값
  - 메서드가 연산 결과를 자신이 호출된 위치에 반환하는 것을 "리턴"이라고 하며, 반환하는 값을 "리턴값" 이라고 한다.
  - 메서드 안에서 값을 리턴하기 위해서는 "return" 이라는 키워드가 사용된다.
  - 값을 리턴하는 메서드는 선언시에 "void" 키워드 대신, 리턴하는 값에 대한 변수형이 명시된다. void 는 리턴값이 없다는 의미가 된다.

	public static 리턴형 메서드이름(변수형 파라미터1,...) {				//리턴형과 파라미터는 전혀 관계가 없다.
	...
	return 리턴값;
	}


 1-8. 메서드간의 상호 호출
  - java의 메서드 역시 서로 호출이 가능하다. 호출된 메서드가 값을 리턴하는 경우, 리턴받은 값을 다른 연산에 사용할 수 있다.

	public static 리턴형 메서드1(변수형 파라미터1) {
		...
		return 리턴값;
	}

	public static 리턴형 메서드2(변수형 파라미터1){
		int k =메서드1(값1 --> 메서드1의 파라미터 입력 형태랑 같아야함);			//메서드1을 호출했을 때 받은 결과값
		return k;
	}













Ctrl+Shift+C : 표시한 줄들 전부 주석처리
