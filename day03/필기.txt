

1. 조건문
 1-1. 조건문 이란?
  - 무조건 실행되는 것이 아니라, 특정 조건을
 충족할 경우에만 실행되는 구문
  
 1-2. 조건문의 종류
  - if문
  : 주어진 조건이 참(true)일 경우에만 실행
  - if~else문
   : 주어진 조건이 참(true)일 경우 if문 실행,
   그렇지 않을 경우 else문 실행
  - if~else if~else문
   : 조건을 여러개로 세분화 하여 사용하는 구문
  - switch문
   : 하나의 '값'에 대하여 여러가지 경우의 수로
   나누어 분기 한다. 

 1-3. if문
  - if문은 주어진 조건이 참일 경우에 지정된 구문이
  실행된다. 
	if(조건){
		... 실행할 구문..
	}
 - 실행할 구문이 한 줄만 있을 경우 괄호{}는 
  생략 가능하다.

 1-4. if문의 조건식
  - 비교식(비교 연산자 사용)
  - 논리식(논리 연산자 사용)
  - boolean값

 1-5. 그렇지 않으면?
  - if문이 조건이 참일 경우에 실행되는 구문이면,
  if문의 조건과 반대되는 경우에 실행되는 구문이 
  else 문이다.
  - else문은 독립적으로 실행될 수 없고, 반드시
  if문의 뒤에 위치해야 한다.

	if(조건){
		.. 실행할 구문 ..
	} else {
		.. 반대경우 실행할 구문 ..
	}

 1-6. if ~ else if ~ else문
  - if문과 else문 사이에 else if문으로 두번째 조건, 세 번째 조건을 나열할 수 있다.
  - else if문은 필요한 만큼 나열할 수 있으며,
  필요치 않을 경우 else문은 생략 가능하다.

	if(1차조건){
		.. 실행할 구문 .. 
	}else if(2차조건){
		.. 실행할 구문 .. 
	}else if(3차조건){
		.. 실행할 구문 .. 
	}else{
		.. 실행할 구문 .. 
	}

 1-7. switch문
  - 변수 값에 대한 경우의 수를 처리하는 switch문
  - switch문은 하나의 변수(기준값)에 대한 여러 가지 
 case를 정의하는 구문
  - if문은 조건에 식(비교식, 부등식)이 사용될 수 있지만,
  switch문은 분기 조건이 반드시 일치하는 '값'에 
  대해서만 처리가 가능하다. 

	switch(기준값){
	case 값1 : 
		.. 실행될 구문 ..
		break;
	case 값n : 
		.. 실행될 구문 ..
		break;
	default : 
		.. 모든 경우에 충족하지 않을경우 실행..
		break;
	}

추가 : switch문의 제약조건
switch 문의 조건식은 결과값이 반드시 정수이어야 하며, 마찬가지로 case문의 값 역시 정수이어야 한다.
정수 상수(문자 포함) & 문자열만 가능!!

 1-8. 삼항연산자
  - 간단한 if문을 짧에 처리하는 연산자
	if(){
		...
	} else if(){
		...
	}
  --------------
   	(조건문)? True일때 : False일때	
   
2. 반복문
 2-1. for문
  - for문은 사람이 직접 처리하기에 부담스러운 반복적인
  작업을 처리하기에 매우 용이하다.
  - (1) : 최초로 초기식을 설정한다.
  - (2) : 초기식을 설정한 다음에는 조건식을 판단한다.
  - (3) : 만약 조건식이 참이라면 반복적으로 동작할 구문을
  1회 수행한다.
  - (4) : 반복구문을 수행한 후, 증감식으로 이동한다.
  - (5) : 증감식을 수행한 후, 다시 조건식으로 이동한다.
  여전히 조건이 참이라면 반복수행을 처리하고, 그렇지 
  않다면 for문을 종료한다. 
	






